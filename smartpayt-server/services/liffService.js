const axios = require("axios");

const verifyLiffToken = async (req, res, next) => {
  try {
    const authHeader = req.headers.authorization;  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ Authorization Header
    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return res.status(401).json({ message: "Unauthorized: No token provided" });
    }

    const idToken = authHeader.split(" ")[1]; // ‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "Bearer " ‡∏≠‡∏≠‡∏Å

    // üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ idToken ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!idToken) {
      return res.status(401).json({ message: "Invalid Token" });
    }

    // üìå ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏Ç‡∏≠‡∏á LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Verify Token
    const response = await axios.post(
      "https://api.line.me/oauth2/v2.1/verify",
      new URLSearchParams({
        id_token: idToken,
        client_id: "2006592847",  // ‚úÖ ‡πÉ‡∏™‡πà Client ID ‡∏Ç‡∏≠‡∏á LINE LIFF App
      }),
      {
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
      }
    );

    // üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å token
    req.user = response.data;
    console.log("LINE User Data:", req.user);

    next();
  } catch (error) {
    console.error("Token verification error:", error.response?.data || error.message);
    return res.status(401).json({ message: "Unauthorized: Invalid token" });
  }
};

module.exports = { verifyLiffToken };
