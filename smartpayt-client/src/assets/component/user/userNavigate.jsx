import React from "react";
import { useLocation, useNavigate } from "react-router-dom";

const BottomNav = () => {
  const navigate = useNavigate();
  const location = useLocation();

  // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ lineUserId ‡∏ï‡∏≠‡∏ô render (‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£ re-render ‡πÄ‡∏ä‡πà‡∏ô ‡∏ï‡∏≠‡∏ô navigate)
  const lineUserId = localStorage.getItem("lineUserId");

  const items = [
    {
      label: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
      iconClass: "fi fi-sr-home",
      to: "/",
    },
    {
      label: "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞",
      iconClass: "fi fi-ss-clock",
      // 'to' path ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏° lineUserId ‡∏ó‡∏µ‡πà‡∏°‡∏µ "‡∏ì ‡∏ï‡∏≠‡∏ô render"
      to: lineUserId ? `/paymenthistory/${lineUserId}` : "/",
      needLogin: true,
    },
    {
      label: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏¢‡∏∞",
      iconClass: "fi fi-rr-chart-histogram",
      // 'to' path ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏° lineUserId ‡∏ó‡∏µ‡πà‡∏°‡∏µ "‡∏ì ‡∏ï‡∏≠‡∏ô render"
      to: lineUserId ? `/wastedata/${lineUserId}` : "/",
      needLogin: true,
    },
  ];

  // --- üëá ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 1 (Stale State) üëá ---
  const handleNav = (item) => {
    // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ localStorage "‡πÉ‡∏´‡∏°‡πà" ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Stale State
    const currentLineUserId = localStorage.getItem("lineUserId");

    // 1. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á Login ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
    if (item.needLogin && !currentLineUserId) {
      alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô");
      navigate("/userLogin");
      return;
    }

    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Path ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
    let destination = item.to;

    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ 'item.to' ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πà‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô "/")
    // ‡πÅ‡∏ï‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤ Login ‡πÅ‡∏•‡πâ‡∏ß (‡∏°‡∏µ currentLineUserId)
    if (item.needLogin && currentLineUserId && item.to === "/") {
      // ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á path ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà ‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å label
      if (item.label === "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞") {
        destination = `/paymenthistory/${currentLineUserId}`;
      } else if (item.label === "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏¢‡∏∞") {
        destination = `/wastedata/${currentLineUserId}`;
      }
    }

    // 4. ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á path ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    navigate(destination);
  };
  // --- üëÜ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 1 üëÜ ---


  // --- üëá ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 2 (Active Check) üëá ---
  const isActive = (to) => {
    // ‡∏ñ‡πâ‡∏≤ 'to' ‡∏Ñ‡∏∑‡∏≠ "/" (‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å) ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏á‡∏ï‡∏±‡∏ß (exact match)
    if (to === "/") {
      return location.pathname === "/";
    }

    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ path ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ 'to'
    const base = to.split("/:")[0];
    return location.pathname.startsWith(base);
  };
  // --- üëÜ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà 2 üëÜ ---

  return (
    <>
      {/* Spacer */}
      <div
        className="h-[calc(env(safe-area-inset-bottom)+56px)] md:h-[calc(env(safe-area-inset-bottom)+64px)]"
        aria-hidden
      />

      <nav
        role="navigation"
        aria-label="Bottom navigation"
        className="fixed bottom-0 inset-x-0 z-50 h-14 md:h-16 bg-white/95 backdrop-blur border-t border-gray-200 shadow-[0_-6px_20px_rgba(0,0,0,0.06)] pb-[env(safe-area-inset-bottom)]"
      >
        <div className="h-full max-w-md mx-auto grid grid-cols-3">
          {items.map((item, index) => {
            // ‡πÉ‡∏ä‡πâ logic 'isActive' ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
            const active = isActive(item.to);
            return (
              <button
                key={index}
                type="button"
                onClick={() => handleNav(item)} // ‡πÉ‡∏ä‡πâ 'handleNav' ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
                className={`relative inline-flex flex-col items-center justify-center gap-0.5 px-5
                  text-[11px] md:text-sm font-medium
                  ${
                    active ? "text-green-600" : "text-gray-600"
                  } hover:text-green-700`}
              >
                <i
                  className={`${item.iconClass} text-[18px] md:text-[20px]`}
                />
                <span>{item.label}</span>

                {/* ‡πÅ‡∏ñ‡∏ö active */}
                {active && (
                  <span className="absolute -top-0.5 h-0.5 w-8 rounded-full bg-green-600" />
                )}
              </button>
            );
          })}
        </div>
      </nav>
    </>
  );
};

export default BottomNav;